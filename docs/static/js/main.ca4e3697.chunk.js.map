{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategoria","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","console","log","useFetchGifs","GifExpertApp","categorias","category","divRoot","document","querySelector","ReactDOM","render"],"mappings":"mMAGaA,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,8DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAeZM,GAfY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCDHO,EAAU,SAAC,GAAiB,IAAhBnB,EAAe,EAAfA,UACrB,ECHwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAyBA,OApBAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAM,SAAAC,GACHC,YAAW,WACPC,QAAQC,IAAIH,GACZH,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAEb,CAACpB,IASIqB,EDvBwBQ,CAAa7B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QACpB,OACI,qCACI,oBAAIJ,UAAU,wCAAd,SAAuDhB,IACvD,sBAAKgB,UAAU,YAAf,UACEI,GAAS,mBAAGJ,UAAU,mCAAb,yBAEXH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADGA,EAAIC,cEqCjBmB,EAjDM,WAGjB,MAAmC5C,mBAAS,CAAC,aAA7C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAOA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,aAAcA,IAC3B,uBAEA,6BAEQ8C,EAAWtB,KAAK,SAAAuB,GAAQ,OACpB,cAAC,EAAD,CAEIhC,UAAYgC,GADNA,YCnB5BC,G,MAAUC,SAASC,cAAc,UAGvCC,IAASC,OACP,cAAC,EAAD,IACAJ,K","file":"static/js/main.ca4e3697.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategoria}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleImputChange = (e) => {\r\n        // console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // setCategoria([inputValue]);\r\n        if(inputValue.trim().length>2){\r\n            setCategoria( cate => [inputValue,...cate]);\r\n            setInputValue('');\r\n        }\r\n        // console.log('Submit Formulario');\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleImputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategoria: PropTypes.func.isRequired\r\n}\r\n\r\n// onChange={ (e)=> console.log(e) }\r\n// {/* <h1> {inputValue} </h1> */}\r\n\r\n// Se puede utilizar asi tambien \r\n// export const AddCategory = (props) => {\r\n// props.setCategoria( cate => [...cate,inputValue]);\r\n","export const getGifs = async(categoria) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(categoria) }&limit=5&api_key=BAlJ2R9NXK2yuQhJb3nF5n2sCz3wjscq`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    // console.log(gifs);\r\n    // setImages(gifs);\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    // console.log(img);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","// import React, { useEffect, useState } from 'react'\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({categoria}) => {\r\n    const {data:images, loading} = useFetchGifs(categoria);\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__backInDown'>{categoria}</h3>\r\n            <div className='card-grid'>\r\n            { loading&&<p className='animate__animated animate__flash'>Cargando...</p>}\r\n            {\r\n            images.map( img => (\r\n                <GifGridItem\r\n                    key = { img.id }\r\n                    { ...img }\r\n                />\r\n            ))\r\n            }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n// { loading?'Cargando..':'Data Cargada'}\r\n\r\n// {\r\n//     images.map( ({id,title}) => (\r\n//         <li key={ id } > { title } </li>\r\n//     ))\r\n// }","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (categoria) =>{\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(categoria)\r\n            .then( imgs => {\r\n                setTimeout(() => {\r\n                    console.log(imgs);\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                }, 3000);\r\n            })\r\n    },[categoria]);\r\n\r\n    // setTimeout(() => {\r\n    //     setState({\r\n    //         data: [1,2,3,4,5,6],\r\n    //         loading: false\r\n    //     })\r\n    // }, 3000);\r\n\r\n    return state; //{}\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n// import PropTypes from 'prop-types';\r\nconst GifExpertApp = () => {//se puede colocar enter y ordenarlos\r\n    // const categorias = ['One Punch','Samurai X','Dragon Ball'];\r\n    // const [categorias, setCategoria] = useState(['One Punch','Samurai X','Dragon Ball']);\r\n    const [categorias, setCategoria] = useState(['Megadeth']);\r\n\r\n    // const handleAdd = () =>{\r\n    //     // setCategoria( [...categorias, 'NuevaCat']);\r\n    //     setCategoria( cate => [...cate,'NuevaCat']);\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategoria={setCategoria} />\r\n            <hr />\r\n            {/* <button onClick={ handleAdd }>Agregar</button> */}\r\n            <ol>\r\n                {\r\n                    categorias.map( category => (\r\n                        <GifGrid \r\n                            key={ category } \r\n                            categoria={ category } \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\n//colocado en el html \r\n// {\r\n//     categorias\r\n// }\r\n\r\n//aqui es donde se hace la validacion de lasa props\r\n// GifExpertApp.propTypes = {\r\n//     saludo: PropTypes.string.isRequired\r\n// }\r\n\r\n// PrimeraApp.defaultProps = {\r\n//     subtitulo: 'Subtitulo Pred'\r\n// }\r\n\r\n// categorias.map( category => {\r\n//     //el key no puede ser el indice...\r\n//     return <li key={category}>{ category }</li>\r\n// })\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nconst divRoot = document.querySelector('#root');\n\n\nReactDOM.render(\n  <GifExpertApp /> ,\n  divRoot\n);"],"sourceRoot":""}